import{createContext as e,forwardRef as n,useRef as r,useState as t,useImperativeHandle as l,useEffect as o,createElement as u,Fragment as i,useContext as c,Children as a,useLayoutEffect as p}from"react";import{createPortal as s}from"react-dom";const d=e(null),m={width:"100%",height:"100%"},f=n(({api:e,options:n,children:c},a)=>{const p=r(null),s=r(!0),[f,v]=t(null);return l(a,()=>f?f.map:null,[f]),o(()=>{if(s.current&&p.current){const r=new e.Map(p.current,{..."function"==typeof n?n(p.current):n});return s.current=!1,v({map:r,api:e}),()=>{}}},[e,n]),u(i,null,u("div",{style:m,ref:p}),f&&u(d.Provider,{value:f},c))}),v=()=>c(d),g=e=>e.children,y=e=>{const{api:n,map:l}=v(),i=r(2),c=a.toArray(e.children||[]),[d,m]=t(null),f=r([]),g=r([]),y=e=>Math.round(e*i.current)/i.current;if(p(()=>{f.current=c}),o(()=>{if(n){i.current=window.devicePixelRatio;const e=new n.OverlayView;let r=null;return e.onAdd=()=>{r=document.createElement("div"),e.getPanes().floatPane.appendChild(r),m({element:r,view:e})},e.onRemove=()=>{if(null!=r){const{parentNode:e}=r;null!=e&&e.removeChild(r),m(null)}},e.draw=()=>{var r=e.getProjection();f.current.forEach(({props:{lat:e,lng:t}},l)=>{const{current:o}=g.current[l];if(null!=o){const l=r.fromLatLngToDivPixel(new n.LatLng(e,t));o.style.left=y(l.x)+"px",o.style.top=y(l.y)+"px"}})},e.setMap(l),()=>{e.setMap(null)}}},[n,l]),null!=d&&null!=c&&null!=n){const e=d.view.getProjection();return s(c.map((r,t)=>{const l=e.fromLatLngToDivPixel(new n.LatLng(r.props.lat,r.props.lng));return null==g.current[t]&&(g.current[t]={current:null}),u("div",{key:r.key,ref:g.current[t],style:{position:"absolute",left:y(l.x),top:y(l.y),display:"grid",gridTemplate:"0/0"}},r,!1)}),d.element)}return null};export{f as Map,g as Marker,y as Overlay,v as useMap};
